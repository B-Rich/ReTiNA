#Config file for storing prefered nodes

#Maximum number of reported nodes per team
#excluding the ones in the *SCAN_IPS variables which
#are always shown.
MAXNODE=4

#These variables hold the Time To Die for both node classes
#that aren't using port scans.  These values are used for 
#OS cacheing.  Increasing this time will decrease the time 
#to run the program (over long periods) but will also 
#decrease accuracy.  Note that <TEAM>_SCAN_IPS are not
#cached as the port scan takes roughly the same time as an
#OS scan, thus caching the OS was pointless.

NO_SCAN_IPS_TTD=900
CACHE_TTD=600

#Ports to be scanned on <TEAM>_SCAN_IPS
PORTS=( 21 22 80 3306 )

#Name of the teams.  Note that each team needs a <TEAM>_SUB, 
#<TEAM>_SCAN_IPS, and <TEAM>_NO_SCAN_IPS or there may be 
#erratic behavior
TEAMS=( RED BLUE WHITE )

#The name that is associated with each team's color.
#Every team needs to have an entry here.
#
declare -A TEAM_MAP
TEAM_MAP["WHITE"]="WHITE"
TEAM_MAP["RED"]="TEAM CHUCK NORRIS"
TEAM_MAP["BLUE"]="TEAM BRUCE LEE"

#Subnets for team identification
#Only works on octet level.  Note that this system was only
#tested to work on networks with \24 netmasks.  In theory,
#the system can be modified to handle \8 and \16 netmasks by
#modifying the nmap ping sweep call in nmapNodeDetection.sh
#but this usage is untested.
RED_SUB=10.0.1
BLUE_SUB=10.0.2
WHITE_SUB=10.0.0

#Team IPs (last octet of IP address)
#<TEAM>_SCAN_IPS contains the ips that will be scanned on PORTS
#<TEAM>_NOSCAN contains ips that you want to give priority to 
#without port scanning
RED_SCAN_IPS=( .10 .11 .12 )
RED_NO_SCAN_IPS=(  )
BLUE_SCAN_IPS=( .10 .11 .12 )
BLUE_NO_SCAN_IPS=(  )
WHITE_SCAN_IPS=( )
WHITE_NO_SCAN_IPS=( .11 .12 .13 .14 .15 .16 )

#Node Types for each team: ( <SCAN_TYPE> <NO_SCAN_TYPE> <OTHER> )
RED_NTYPES=( "Server" "Server" "Client" )
BLUE_NTYPES=( "Server" "Server" "Client" )
WHITE_NTYPES=( "Server" "KoTH" "Client" )

